-- Investigating the dataset
SELECT *
FROM sales
-----------------------------------------------------------------------------------------------------------------
-- Lets check for unique values in interested features of the dataset
SELECT DISTINCT STATUS FROM sales -- Types of Status
SELECT DISTINCT PRODUCTLINE FROM sales -- Different Productlines
SELECT DISTINCT COUNTRY FROM sales -- Countries
SELECT DISTINCT DEALSIZE FROM sales -- Types of Sales Sizes
SELECT DISTINCT TERRITORY FROM sales -- Territories
SELECT DISTINCT YEAR_ID FROM sales -- TimeLine
SELECT DISTINCT MONTH_ID FROM sales -- Months
SELECT DISTINCT QTR_ID FROM sales -- Quarters of the year
------------------------------------------------------------------------------------------------------------------
-- Lets Explore the data

-- Total revenue generated by each productline
SELECT PRODUCTLINE, ROUND(SUM(sales),2) AS TOTAL_REVENUE
FROM sales
WHERE PRODUCTLINE IS NOT NULL
GROUP BY 1
ORDER BY 2 DESC
/* Classic Cars generated the most revenue with an amount close to 4 million, and
   Trains generated the least revenue with an amount over 200K */
------------------------------------------------------------------------------------------------------------------ 
-- Total revenue generated by each country
SELECT COUNTRY, ROUND(SUM(sales),2) AS TOTAL_REVENUE
FROM sales
WHERE COUNTRY IS NOT NULL
GROUP BY 1
ORDER BY 2 DESC
LIMIT 10
/* USA generated the most revenue with an amount of about 3.6 million, and
   Denmark generated the least revenue of the top 10 countries with an amount
	just over 245K */
----------------------------------------------------------------------------------------------------------------
-- Total revenue generated by each deal size
SELECT DEALSIZE, ROUND(SUM(sales),2) AS TOTAL_REVENUE
FROM sales
WHERE DEALSIZE IS NOT NULL
GROUP BY 1
ORDER BY 2 DESC
/* Medium dealsizes generated the most revenue with an amount of about 6 million, and
   Large dealsizes generated the least revenue with an amount over 1 million */
----------------------------------------------------------------------------------------------------------------
-- Total revenue generated by each territory
SELECT TERRITORY, ROUND(SUM(sales),2) AS TOTAL_REVENUE
FROM sales
GROUP BY 1
ORDER BY 2 DESC
/* EMEA generated the most revenue with an amount close to 5 million, and
   Japan generated the least revenue with an amount over 455K. Many territories were not 
	document but they had a total revenue with an amount of about 3.8 million */
---------------------------------------------------------------------------------------------------------------
-- Total revenue generated by each year
SELECT YEAR_ID, ROUND(SUM(sales),2) AS TOTAL_REVENUE
FROM sales
WHERE YEAR_ID IS NOT NULL
GROUP BY 1
ORDER BY 2 DESC
/* 2004 generated the most revenue with an amount of about 4.7 million, and
   2005 generated the least revenue with an amount of about 1.7 million */
---------------------------------------------------------------------------------------------------------------
-- Total revenue generated and Total quantity ordered by each Productline in USA
SELECT COUNTRY, PRODUCTLINE, SUM(QUANTITYORDERED) AS QUANTITYORDERED,ROUND(SUM(sales),2) AS TOTAL_REVENUE
FROM sales
WHERE COUNTRY IS NOT NULL AND COUNTRY = 'USA'
GROUP BY 1,2
ORDER BY 4 DESC
/*Classic Cars had the most quantity ordered with an amount over 11K, and
   Trains had the least quantity ordered with an amount over 900 */
---------------------------------------------------------------------------------------------------------------
-- Total revenue generated and Total quantity ordered by each Deal size in USA
SELECT COUNTRY, DEALSIZE, SUM(QUANTITYORDERED) AS QUANTITYORDERED,ROUND(SUM(sales),2) AS TOTAL_REVENUE
FROM sales
WHERE COUNTRY IS NOT NULL AND COUNTRY = 'USA'
GROUP BY 1,2
ORDER BY 4 DESC
/* Medium dealsizes had the most quantity ordered with an amount of about 19K, and
   Large dealsizes had the least quantity ordered with an amount of about 3K */
---------------------------------------------------------------------------------------------------------------
-- Total revenue generated and Total quantity ordered in each month and year
WITH months AS (
SELECT ORDERNUMBER, MONTHNAME(STR_TO_DATE(MONTH_ID, '%m')) AS MONTH
FROM sales
ORDER BY MONTH_ID)

SELECT YEAR_ID,MONTH,QTR_ID,SUM(QUANTITYORDERED) AS QUANTITYORDERED,ROUND(SUM(sales),2) AS TOTAL_REVENUE
FROM sales
LEFT JOIN months
USING (ORDERNUMBER)
WHERE YEAR_ID IS NOT NULL
GROUP BY 1,2,3
ORDER BY 1,5 desc
/* The fourth quarter of the year had the most quantity ordered and most revenue generated
   in the current timeline of the dataset */
-----------------------------------------------------------------------------------------------------------------
/* Lets use RFM analyis to gain insights on the activities of our customers, like finding our
	loyal customers, potential churners, new customers, active customers and lost customers */

-- CTE'S   
WITH RFM AS (   
SELECT CUSTOMERNAME,
	ROUND(SUM(sales),2) AS Monetary,
	ROUND(AVG(sales),2) AS AvgMonetary,
	COUNT(ORDERNUMBER) AS Frequency,
	MAX(ORDERDATE) AS Last_Order_Date,
	(SELECT MAX(ORDERDATE) FROM sales) AS Max_Order_Date,
	DATEDIFF((SELECT MAX(ORDERDATE) FROM sales), MAX(ORDERDATE)) AS Recency 
FROM sales
WHERE CUSTOMERNAME IS NOT NULL
GROUP BY 1
),
RFM_CALC AS (
SELECT *,
	NTILE(4) OVER(ORDER BY Recency DESC) AS rfm_recency,
	NTILE(4) OVER(ORDER BY Frequency) AS rfm_frequency,
	NTILE(4) OVER(ORDER BY AvgMonetary) AS rfm_monetary
FROM RFM
),
RFM_CALC_CELL AS (
SELECT *,
	CONCAT(rfm_recency,rfm_frequency,rfm_monetary) AS rfm_string
FROM RFM_CALC
)


/*SELECT CUSTOMERNAME,rfm_recency,rfm_frequency,rfm_monetary,
	CASE
		 WHEN rfm_string IN ('111','112','113','121','142','122','123','132','211','212','114','141','221','142') THEN 'Lost Customers'
		 WHEN rfm_string IN ('133','134','143','244','334','343','344','214','231') THEN 'Slipping away, cannot lose'
		 WHEN rfm_string IN ('311','241','411','121','331','414','312') THEN 'New Customers'
		 WHEN rfm_string IN ('222','223','224','233','322','314','231') THEN 'Potential Churners'
		 WHEN rfm_string IN ('323','342','333','242','321','422','421','332','432','234','431','341') THEN 'Active'
		 WHEN rfm_string IN ('441','433','424','434','443','444','442') THEN 'Loyal'
	END rfm_segment
FROM RFM_CALC_CELL */


----------------------------------------------------------------------------------------------------------------

-- lets get the total number of each RFM segments from the analysis
SELECT
	CASE
		 WHEN rfm_string IN ('111','112','113','121','142','122','123','132','211','212','114','141','221','142') THEN 'Lost Customers'
		 WHEN rfm_string IN ('133','134','143','244','334','343','344','214','231') THEN 'Slipping away, cannot lose'
		 WHEN rfm_string IN ('311','241','411','121','331','414','312') THEN 'New Customers'
		 WHEN rfm_string IN ('222','223','224','233','322','314','231') THEN 'Potential Churners'
		 WHEN rfm_string IN ('323','342','333','242','321','422','421','332','432','234','431','341') THEN 'Active'
		 WHEN rfm_string IN ('441','433','424','434','443','444','442') THEN 'Loyal'
	END rfm_segment,
	COUNT(*) AS Count
FROM RFM_CALC_CELL
GROUP BY 1
ORDER BY 2
/* We have 22 lost customers, 17 active customers, 16 loyal customers, 15 Potential Churners, 13 slipping away,
	and 9 new customers	